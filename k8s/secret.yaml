apiVersion: v1
kind: Secret
metadata:
  name: radiocontestwinner-secrets
  labels:
    app: radiocontestwinner
    version: v3.4
    component: secrets
    sensitive: "true"
  annotations:
    description: "Radio Contest Winner application secrets - replace placeholders with actual values"
    managed-by: "kubernetes-manual"
    warning: "Contains sensitive data - apply appropriate access controls"
    usage-instructions: "Replace all ${PLACEHOLDER} values with actual secrets. Use base64 encoding for binary data. Apply with: kubectl apply -f secret.yaml"
    security-warning: "This file contains confidential information. Implement proper access controls and rotation policies."
    rotation-schedule: "Quarterly or when compromise is suspected"
    compliance: "Follow organizational security policies for secret management"
type: Opaque
data:
  # Stream authentication token for audio stream source
  # Replace with actual base64-encoded authentication token
  stream-auth-token: ${STREAM_AUTH_TOKEN}

  # API key for external transcription services (if needed)
  # Replace with actual base64-encoded API key
  api-key: ${API_KEY}

  # Database connection string for contest result storage (if using external database)
  # Replace with actual base64-encoded connection string
  db-connection-string: ${DB_CONNECTION_STRING}

  # Password for external service authentication
  # Replace with actual base64-encoded password
  external-service-password: ${EXTERNAL_SERVICE_PASSWORD}

  # Secret for webhook payload validation (if using webhooks)
  # Replace with actual base64-encoded secret
  webhook-secret: ${WEBHOOK_SECRET}

  # Encryption key for sensitive data at rest (optional)
  # Replace with actual base64-encoded encryption key
  encryption-key: ${ENCRYPTION_KEY}

  # OAuth client secret for authentication (if using OAuth)
  # Replace with actual base64-encoded client secret
  oauth-client-secret: ${OAUTH_CLIENT_SECRET}

  # SSL/TLS certificate private key (if using custom certificates)
  # Replace with actual base64-encoded private key
  tls-private-key: ${TLS_PRIVATE_KEY}

  # JWT signing secret for authentication tokens
  # Replace with actual base64-encoded signing secret
  jwt-signing-secret: ${JWT_SIGNING_SECRET}

  # Monitoring service API key (if using external monitoring)
  # Replace with actual base64-encoded API key
  monitoring-api-key: ${MONITORING_API_KEY}

stringData:
  # Non-sensitive configuration that needs to be protected
  # These values are provided as plaintext and automatically base64-encoded by Kubernetes

  # Environment identifier for configuration context
  environment: "${ENVIRONMENT}"

  # Configuration version identifier
  config-version: "${CONFIG_VERSION}"

  # Service account for API access
  service-account: "${SERVICE_ACCOUNT}"

  # Monitoring configuration endpoint
  monitoring-endpoint: "${MONITORING_ENDPOINT}"